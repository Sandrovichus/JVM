
public class JvmComprehension {       // Подгрузка классов JvmComprehension, Object, Integer, System в подсистему загрузчика классов, связывание (проверка кода, подготовка примитивов в статических полях, 
                                      // связывание ссылок на другие классы) и инициализация (выполняются статические инициализаторы и инициализаторы статических полей). Данные о классах (имя, методы, поля) 
                                      // сохраняются в Metaspace.

    public static void main(String[] args) {  // В стеке выделяется фрейм для метода main
        int i = 1;                      // в этом фрейме сохраняется целочисленное значение 1 в локальной переменной i
        Object o = new Object();        // в куче создается и сохраняется объект o типа Object, в стеке во фрейме для main сохраняется ссылка на объект o 
        Integer ii = 2;                 // во фрейме для main сохраняется целочисленное значение 2 и ссылка на объект ii
        printAll(o, i, ii);             // в стеке выделяется фрейм для метода printAll, параметры которого копируются из первого фрейма
        System.out.println("finished"); // в стеке выделяется фрейм для println, в который передается параметр "finished". После выполнения метода закрывется фрейм и закрываются по порядку все фреймы, которые создавались 
                                        // ранее
    }

    private static void printAll(Object o, int i, Integer ii) { 
        Integer uselessVar = 700;                   // во фрейме для printAll сохраняется целочисленное значение 700 и ссылка на объект uselessVar
        System.out.println(o.toString() + i + ii);  // в стеке создается фрейм для метода println, затем еще один для toString. После выполнения toString его фрейм закрывается, выполняется println и закрывается соответсвующий
                                                    // фрейм
    }
}
